<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cy.answer.dao.QuestionDao">
  <resultMap id="BaseResultMap" type="com.cy.answer.model.Question">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="options" jdbcType="VARCHAR" property="options" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, content, answer, type, options, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from question
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from question
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cy.answer.model.Question">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into question (content, answer, type, 
      options, create_time)
    values (#{content,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{options,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cy.answer.model.Question">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="content != null">
        content,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="options != null">
        options,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="options != null">
        #{options,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cy.answer.model.Question">
    update question
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="options != null">
        options = #{options,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cy.answer.model.Question">
    update question
    set content = #{content,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      options = #{options,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 随机选一题 -->
    <select id="randomOneQuestion" resultMap="BaseResultMap">
  	SELECT  id, content, type, options
  	 FROM question  AS t1  JOIN 
	(SELECT ROUND(RAND() * (
	(SELECT MAX(id) FROM `question`)-(SELECT MIN(id) FROM question))
	+(SELECT MIN(id) FROM question)) AS ranId) 
	AS t2 WHERE t1.id >= t2.ranId ORDER BY t1.id LIMIT 1
  </select>
  
</mapper>